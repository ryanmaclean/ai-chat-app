name: Security Scan

# Add explicit permissions
permissions:
  contents: read
  security-events: write
  actions: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate SBOM
        run: npm run sbom:generate
      
      - name: Install OSV Scanner
        run: |
          curl -sSfL https://raw.githubusercontent.com/DataDog/osv-scanner/main/install.sh | sh -s -- -b .
      
      - name: Run OSV Scanner
        run: ./osv-scanner --sbom=sbom.json --format=json > security-results.json
      
      - name: Upload security results
        uses: actions/upload-artifact@v3
        with:
          name: security-results
          path: security-results.json
      
      - name: Check for vulnerabilities
        run: |
          VULN_COUNT=$(jq '.results[0].packages | length' security-results.json)
          if [ "$VULN_COUNT" -gt 0 ]; then
            echo "Found $VULN_COUNT vulnerable packages:"
            jq -r '.results[0].packages[] | "- \(.package.name)@\(.package.version): \(.vulnerabilities | length) vulnerabilities"' security-results.json
            
            # Check for critical vulnerabilities only
            CRITICAL_COUNT=$(jq '[.results[0].packages[].vulnerabilities[] | select(.severity == "CRITICAL")] | length' security-results.json)
            if [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "Found $CRITICAL_COUNT critical vulnerabilities. Failing build."
              exit 1
            else
              echo "No critical vulnerabilities found. Continuing build."
            fi
          else
            echo "No vulnerabilities found!"
          fi
      
      - name: Send results to Datadog
        if: always()
        run: |
          # Send SBOM and vulnerability data to Datadog
          curl -X POST "https://api.datadoghq.com/api/v2/security_monitoring/sbom" \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            --data-binary @sbom.json
      
      - name: Run security scan
        run: npm run security:scan
        env:
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }} 